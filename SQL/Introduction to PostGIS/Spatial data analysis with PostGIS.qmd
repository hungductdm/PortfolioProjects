---
title: "SQL PROJECT - SPATIAL DATA ANALYSIS WITH POSTGIS"
author: "Duc Luong"
date: '3 December 2023'
number-sections: true
format: 
  html:
    anchor-sections: true
    embed-resources: true
    smooth-scroll: true
    toc: true
    toc-location: left
    theme:
      light: cosmo
      dark: darkly
---

## INTRODUCTION

**About this project:**

As I am new to spatial data analysis, this project will only focus on myself following the instructions and exercises provided by the [Introduction to PostGIS workshop](https://postgis.net/workshops/postgis-intro/index.html). With that said, I will attempt to come up with my own questions and scenarios to apply the newly acquired knowledge. This is an ongoing project and will be updated regularly until the workshop is completed.

**About the data:**

The data for this workshop is four shapefiles for New York City, and one attribute table of sociodemographic variables.

1. **nyc_census_blocks**
    
::: {.callout-note collapse="true" appearance="simple"}
# More details

| Column     | Description                                                                         |
|------------|-------------------------------------------------------------------------------------|
| blkid      | A 15-digit code that uniquely identifies every census block. Eg: 360050001009000    |
| popn_total | Total number of people in the census block                                          |
| popn_white | Number of people self-identifying as “White” in the block                           |
| popn_black | Number of people self-identifying as “Black” in the block                           |
| popn_nativ | Number of people self-identifying as “Native American” in the block                 |
| popn_asian | Number of people self-identifying as “Asian” in the block                           |
| popn_other | Number of people self-identifying with other categories in the block                |
| boroname   | Name of the New York borough. Manhattan, The Bronx, Brooklyn, Staten Island, Queens |
| geom       | Polygon boundary of the block                                                       |
:::

2. **nyc_neighborhoods**

::: {.callout-note collapse="true" appearance="simple"}
# More details

| Column   | Description                                                                         |
|----------|-------------------------------------------------------------------------------------|
| name     | Name of the neighborhood                                                            |
| boroname | Name of the New York borough. Manhattan, The Bronx, Brooklyn, Staten Island, Queens |
| geom     | Polygon boundary of the neighborhood                                                |
:::

3. **nyc_streets**

::: {.callout-note collapse="true" appearance="simple"}
# More details

| Column | Description                                           |
|--------|-------------------------------------------------------|
| name   | Name of the street                                    |
| oneway | Is the street one-way? “yes” = yes, “” = no           |
| type   | Road type (primary, secondary, residential, motorway) |
| geom   | Linear centerline of the street                       |
:::

4. **nyc_subway_stations**

::: {.callout-note collapse="true" appearance="simple"}
# More details

| Column    | Description                                                                         |
|-----------|-------------------------------------------------------------------------------------|
| name      | Name of the station                                                                 |
| borough   | Name of the New York borough. Manhattan, The Bronx, Brooklyn, Staten Island, Queens |
| routes    | Subway lines that run through this station                                          |
| transfers | Lines you can transfer to via this station                                          |
| express   | Stations where express trains stop, “express” = yes, “” = no                        |
| geom      | Point location of the station                                                       |
:::

5. **nyc_census_sociodata**

::: {.callout-note collapse="true" appearance="simple"}
# More details

| Column                  | Description                                                                    |
|-------------------------|--------------------------------------------------------------------------------|
| tractid                 | An 11-digit code that uniquely identifies every census tract. (“36005000100”)  |
| transit_total           | Number of workers in the tract                                                 |
| transit_private         | Number of workers in the tract who use private automobiles / motorcycles       |
| transit_public          | Number of workers in the tract who take public transit                         |
| transit_walk            | Number of workers in the tract who walk                                        |
| transit_other           | Number of workers in the tract who use other forms like walking / biking       |
| transit_none            | Number of workers in the tract who work from home                              |
| transit_time_mins       | Total number of minutes spent in transit by all workers in the tract (minutes) |
| family_count            | Number of families in the tract                                                |
| family_income_median    | Median family income in the tract (dollars)                                    |
| family_income_mean      | Average family income in the tract (dollars)                                   |
| family_income_aggregate | Total income of all families in the tract (dollars)                            |
| edu_total               | Number of people with educational history                                      |
| edu_no_highschool_dipl  | Number of people with no high school diploma                                   |
| edu_highschool_dipl     | Number of people with high school diploma and no further education             |
| edu_college_dipl        | Number of people with college diploma and no further education                 |
| edu_graduate_dipl       | Number of people with graduate school diploma                                  |
:::


## LOADING SPATIAL DATA

### Creating a spatial database in PostgreSQL

Select the database. Load PostGIS spatial extension to the database in PgAdmin using the following query.

```sql
CREATE EXTENSION postgis;
```

Confim that PostGIS is installed

```sql
SELECT postgis_full_version();
```

### Importing spatial data with OGR2OGR

Since I already have QGIS installed, I will import spatial data through OGR2OGR.

In OSGeo4W Shell, navigate to the folder containing data to import and type:

```powershell
ogr2ogr -nln nyc_census_blocks_2000 -nlt PROMOTE_TO_MULTI -lco GEOMETRY_NAME=geom -lco FID=gid -lco PRECISION=NO Pg:"dbname=nyc host=localhost user=postgres password=******** port=5432" nyc_census_blocks_2000.shp
```

Remember to change the `username` and `password`.

:::{.callout-note}
Alternatively, data can be *restored* using `.backup` files in PgAdmin.
To do so, right click on the database, then select **Restore...**
:::


### Trying to connect and view data with QGIS

Open QGIS, select **Layer > Add Layer > Add PostGIS Layers**

![](images/add%20postgis%20layer%20in%20qgis.png)

Click the **New** button, then fill out **Name** (nyc), **Host** (localhost), **Database** (nyc). Click **OK** to connect.

![](images/create%20a%20new%20postgis%20connection.png)

Once connected, select tables to add, then click **Add**.

![](images/add%20layers%20qgis.png)

Select layers to display from the **Layers** panel.

![](images/successful%20layer%20view%20qgis.png)


## RUNNING NON-SPATIAL SQL QUERIES

I will answer some questions about the datasets using SQL.

1. **How many records are there in the nyc_census_block?**

    ```sql
    SELECT COUNT(*)
    FROM nyc_census_blocks;
    ```

    Output:

    ```powershell
    "count"
    38794
    ```

2. **What is the total population of New York?**

    ```sql
    SELECT SUM(popn_total) AS total_population
    FROM nyc_census_blocks;
    ```

    Output:

    ```powershell
    "total_population"
    8175032
    ```

3. **What is the population of each borough of New York?**

    ```sql
    SELECT boroname, SUM(popn_total)
    FROM nyc_census_blocks
    GROUP BY boroname;
    ```

    Output:

    ```powershell
    | "boroname"      | "sum"   |
    |-----------------|---------|
    | "Queens"        | 2230621 |
    | "Brooklyn"      | 2504700 |
    | "The Bronx"     | 1385108 |
    | "Manhattan"     | 1585873 |
    | "Staten Island" | 468730  |
    ```

4. **Summarize demographic data from nyc_census_block table.**

    ```sql
    SELECT
      boroname,
      SUM(popn_total) AS total_pop,
      ROUND(((SUM(popn_white) / SUM(popn_total)) * 100)::numeric, 2) AS white_pop_pct,
      ROUND(((SUM(popn_black) / SUM(popn_total)) * 100)::numeric, 2) AS black_pop_pct,
      ROUND(((SUM(popn_asian) / SUM(popn_total)) * 100)::numeric, 2) AS asian_pop_pct,
      ROUND(((SUM(popn_nativ) / SUM(popn_total)) * 100)::numeric, 2) AS native_pop_pct,
      ROUND(((SUM(popn_other) / SUM(popn_total)) * 100)::numeric, 2) AS others_pop_pct
    FROM nyc_census_blocks
    GROUP BY boroname
    ORDER BY 2 DESC;
    ```

    Output:

    ```powershell
    | "boroname"      | "total_pop" | "white_pop_pct" | "black_pop_pct" | "asian_pop_pct" | "native_pop_pct" | "others_pop_pct" |
    |-----------------|-------------|-----------------|-----------------|-----------------|------------------|------------------|
    | "Brooklyn"      | 2504700     | 42.80           | 34.34           | 10.47           | 0.54             | 11.85            |
    | "Queens"        | 2230621     | 39.72           | 19.13           | 22.94           | 0.69             | 17.51            |
    | "Manhattan"     | 1585873     | 57.45           | 15.56           | 11.32           | 0.55             | 15.13            |
    | "The Bronx"     | 1385108     | 27.90           | 36.47           | 3.58            | 1.32             | 30.72            |
    | "Staten Island" | 468730      | 72.89           | 10.64           | 7.50            | 0.36             | 8.61             |
    ```

5. **How many subway stations are there in each borough in New York? Include a total number of stations to each row for comparison.**

    ```sql
    SELECT
      borough,
      (SELECT COUNT(*) FROM nyc_subway_stations) AS total_ny_stations,
      COUNT(name) AS stations_count
    FROM nyc_subway_stations
    GROUP BY borough;
    ```

    Output:

    ```powershell
    | "borough"       | "total_ny_stations" | "stations_count" |
    |-----------------|---------------------|------------------|
    | "Queens"        | 491                 | 90               |
    | "Brooklyn"      | 491                 | 170              |
    | "Staten Island" | 491                 | 22               |
    | "Manhattan"     | 491                 | 140              |
    | "Bronx"         | 491                 | 69               |
    ```

6. **Calculate the people per station metric for each borough.**

    ```sql
    -- Define a temporary table containing the number of stations per borough
    WITH stations_cte AS (
      SELECT 
        borough,
        COUNT(*) AS total_stations,
        COUNT(CASE WHEN express = 'express' THEN 1 END) AS exp_stations
      FROM nyc_subway_stations
      GROUP BY borough
    )

    SELECT 
      boroname,
      
      -- Calculate average population of New York
      AVG((SELECT SUM(popn_total) FROM nyc_census_blocks)) AS ny_populations,
      
      -- Calculate total population for each borough
      SUM(popn_total) AS boro_populations,
      
      -- Calculate average number of all stations per borough
      AVG(total_stations)::int AS stations_count,
      
      -- Calculate average people per all station
      ROUND(SUM(popn_total) / AVG(total_stations)) AS people_per_station,
      
      -- Calculate average number of express stations per borough
      AVG(exp_stations)::int AS express_stations_count,
      
      -- Calculate average people per express station (handle division by zero)
      ROUND(SUM(popn_total) / NULLIF(AVG(exp_stations), 0)) AS people_per_exp_station
      
    FROM nyc_census_blocks ncb
    LEFT JOIN stations_cte sc ON ncb.boroname = sc.borough
    GROUP BY boroname
    ORDER BY boro_populations DESC;
    ```

    Output:

    ```powershell
    | "boroname"      | "ny_populations" | "boro_populations" | "stations_count" | "people_per_station" | "express_stations_count" | "people_per_exp_station" |
    |-----------------|------------------|--------------------|------------------|----------------------|--------------------------|--------------------------|
    | "Brooklyn"      | 8175032          | 2504700            | 170              | 14734                | 31                       | 80797                    |
    | "Queens"        | 8175032          | 2230621            | 90               | 24785                | 14                       | 159330                   |
    | "Manhattan"     | 8175032          | 1585873            | 140              | 11328                | 62                       | 25579                    |
    | "The Bronx"     | 8175032          | 1385108            |                  |                      |                          |                          |
    | "Staten Island" | 8175032          | 468730             | 22               | 21306                | 0                        |                          |
    ```

## RUNNING GEOMETRIES FUNCTIONS

Answer some questions about New York city using geometries functions.

1. **What is the total length of all streets in New York in kilometers?**

    ```sql
    SELECT ROUND(SUM(ST_Length(geom))::numeric / 1000, 2) AS total_length_km
    FROM nyc_streets;
    ```

    Output:

    ```powershell
    "total_length_km"
    10418.90
    ```

2. **How many types of streets are there and what is the total length of each type?**

    ```sql
    SELECT 
      type,
      ROUND(SUM(ST_Length(geom))::numeric, 2) AS length_m
    FROM nyc_streets
    GROUP BY type
    ORDER BY length_m DESC;
    ```

    Output:

    ```powershell
    | "type"                                             | "length_m" |
    |----------------------------------------------------|------------|
    | "residential"                                      | 8629870.34 |
    | "motorway"                                         | 403622.48  |
    | "tertiary"                                         | 360394.88  |
    | "motorway_link"                                    | 294261.42  |
    | "secondary"                                        | 276264.30  |
    | "unclassified"                                     | 166936.37  |
    | "primary"                                          | 135034.23  |
    | "footway"                                          | 71798.49   |
    | "service"                                          | 28337.64   |
    | "trunk"                                            | 20353.58   |
    | "cycleway"                                         | 8863.75    |
    | "pedestrian"                                       | 4867.05    |
    | "construction"                                     | 4803.08    |
    | "residential; motorway_link"                       | 3661.58    |
    | "trunk_link"                                       | 3202.19    |
    | "primary_link"                                     | 2492.57    |
    | "living_street"                                    | 1894.64    |
    | "primary; residential; motorway_link; residential" | 1367.77    |
    | "undefined"                                        | 380.54     |
    | "steps"                                            | 282.75     |
    | "motorway_link; residential"                       | 215.08     |
    ```

3. **Calculate some summary statistics about New York streets.**

    ```sql
    SELECT
      ROUND(SUM(ST_Length(geom))) AS total_res_length_m,
      ROUND(AVG(ST_Length(geom))::numeric, 2) AS avg_res_length,
      ROUND(percentile_cont(.5) 
          WITHIN GROUP (ORDER BY ST_Length(geom))::numeric, 2) 
          AS median_res_length,
      ROUND(MAX(ST_Length(geom))) AS longest_length,
      (
        SELECT name 
        FROM nyc_streets 
        WHERE ST_Length(geom) = (
          SELECT MAX(ST_Length(geom)) 
          FROM nyc_streets
        )
      ) AS longest_street
    FROM nyc_streets;
    ```

    Output:

    ```powershell
    | "total_res_length_m" | "avg_res_length" | "median_res_length" | "longest_length" | "longest_street"  |
    |----------------------|------------------|---------------------|------------------|-------------------|
    | 10418905             | 545.75           | 269.11              | 14918            | "Leif Ericson Dr" |
    ```